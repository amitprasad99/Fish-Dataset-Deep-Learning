# -*- coding: utf-8 -*-
"""Fish_Deep_Learning.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wqqWIctnzDn7Lks-2OuslXtQn_9LpduX
"""

import keras
import tensorflow

from keras.models import Sequential  #Sequential--->Pipelining
from keras.layers import Dense   #Dense---> To Define Output Layer or It will Fully Connect Input Layer and Output Layer
from keras.optimizers import Adam  #Adam--->Optimizer---Optimal Answer
import numpy as np
import matplotlib.pyplot as plt

import pandas as pd
import seaborn as sns

fish=pd.read_csv(r'/content/Fish_dataset.csv')
fish

fish.info()

fish.isnull()

fish.isnull().sum()

for i in fish.columns:
    print(i,':','\n',fish[i].unique(),'\n')

sns.scatterplot(x=fish.Weight,y=fish.Width)
plt.show()

cor=fish.corr()
cor

sns.heatmap(cor,annot=True,cmap="Reds")
plt.show()

ip=fish[['Length1','Length2','Length3','Height','Width']]
op=fish['Weight']

print("Input",ip,"Output",op)

from sklearn.model_selection import train_test_split
xtrain,xt,ytrain,yt=train_test_split(ip,op,test_size=0.8)

model=Sequential()
#Input Layer
model.add(Dense(80,input_dim=5,activation='ELU'))

#Hidden Layer
model.add(Dense(60,activation='ELU'))
model.add(Dense(30,activation='ELU'))

#Output Layer
model.add(Dense(1,activation='ELU'))

#Compile
model.compile(Adam(learning_rate=0.03),loss='mae')

model.summary()

x=model.fit(xtrain,ytrain,epochs=200,validation_data=(xt,yt))

y_pred=model.predict(xt)
y_pred

from sklearn.metrics import r2_score
r2=r2_score(y_pred,yt)

print('r2',r2)

